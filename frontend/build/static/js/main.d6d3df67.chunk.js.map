{"version":3,"sources":["redux/actions/authActions.js","redux/actions/searchActions.js","redux/actions/reviewActions.js","redux/reducers/searchReducer.js","redux/reducers/authReducer.js","redux/reducers/reviewReducer.js","redux/reducers/serviceReducer.js","redux/reducers/rootReducer.js","helpers/scroll-top.js","App.js","serviceWorker.js","index.js","redux/actions/serviceActions.js"],"names":["GET_PHONE_CODE_SUCCESS","GET_PHONE_CODE_FAIL","SET_PHONE_APPROVED_SUCCESS","SET_PHONE_APPROVED_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_ADD_EXTRA_PHONE_SUCCESS","LOGOUT","getPhoneCode","raw","dispatch","a","config","headers","body","prephone","replace","phone","substring","JSON","stringify","getJson","axios","post","process","type","payload","data","phone_error","response","setPhoneApproved","code","login","res","localStorage","getItem","get","signup","reset_password","email","reset_password_confirm","uid","token","new_password","re_new_password","logout","clearReviews","update_user","name","full_name","city","birthday","avatar","about","content","patch","add_extra_phone","Authorization","Accept","phone_number","id","SET_SEARCH_REQUEST_SUCCESS","searchRequestSuccess","request","n","getPhone","GET_REVIEW_TEMPLATE_SUCCESS","GET_REVIEW_TEMPLATE_FAIL","SET_REVIEW_SUCCESS","SET_REVIEW_FAIL","GET_REVIEWS_ABOUT_ME_SUCCESS","GET_REVIEWS_ABOUT_ME_FAIL","GET_MY_REVIEWS_SUCCESS","GET_MY_REVIEWS_FAIL","SET_COMMENT_SUCCESS","SET_COMMENT_FAIL","CLEAR_REVIEWS","RESET_STATUS","RESET_REVIEW_ERROR","getReviewTemplates","templates","setReview","attributes","status","error","resetReviewError","getReviewsAboutMe","reviews_about_me","massage","getMyReviews","my_reviews","setComment","review","owner_id","resetStatus","initState","searchReducer","state","action","initialState","phone_approved","access","refresh","isAuthenticated","user","authReducer","phones","push","setItem","removeItem","review_templates","set_review_success","reviewReducer","categories","temp_title","services","service","users_services","serviceReducer","GET_ALL_CATEGORIES_SUCCESS","GET_ALL_USERS_SERVICES_SUCCESS","SET_CATEGORY_SUCCESS","title","SET_SERVICE_SUCCESS","GET_ALL_CATEGORIES_FAIL","SET_CATEGORY_FAIL","rootReducer","combineReducers","searchData","auth","withRouter","props","useEffect","window","scrollTo","children","Home","lazy","ReviewsSearch","MyProfile","Login","Register","PasswordReset","PasswordConfirm","RequestSent","AddReview","NotFound","App","placement","fallback","className","exact","path","component","Boolean","location","hostname","match","store","createStore","load","composeWithDevTools","applyMiddleware","thunk","save","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","get_all_categories","set_category","set_service","category_id","get_all_users_services","set_users_service"],"mappings":"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","file":"static/js/main.d6d3df67.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from 'js-cookie';\nimport {clearReviews} from \"./reviewActions\";\n\nexport const GET_PHONE_CODE_SUCCESS = \"GET_PHONE_CODE_SUCCESS\";\nexport const GET_PHONE_CODE_FAIL = \"GET_PHONE_CODE_FAIL\";\nexport const SET_PHONE_APPROVED_SUCCESS = \"SET_PHONE_APPROVED_SUCCESS\";\nexport const SET_PHONE_APPROVED_FAIL = \"SET_PHONE_APPROVED_FAIL\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\n\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_ADD_EXTRA_PHONE_SUCCESS = 'USER_ADD_EXTRA_PHONE_SUCCESS'\nexport const USER_ADD_EXTRA_PHONE_FAIL = 'USER_ADD_EXTRA_PHONE_FAIL'\nexport const LOGOUT = 'LOGOUT';\n\nexport const getPhoneCode = (raw) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const getJson = () => {\n    const prephone = raw.replace(/[^+\\d]/g, '')\n    const phone = prephone[0] === '+' ? prephone.substring(1) : prephone\n    return JSON.stringify({phone})\n  }\n\n  const body = getJson();\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/getcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: GET_PHONE_CODE_SUCCESS,\n      payload: {phone: raw}\n    });\n  } catch (err) {\n    const data = {\n      phone_error: err.response\n    }\n    dispatch({\n      type: GET_PHONE_CODE_FAIL,\n      payload: data\n    })\n  }\n};\n\nexport const setPhoneApproved = (raw, code) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const getJson = () => {\n    const prephone = raw.replace(/[^+\\d]/g, '')\n    const phone = prephone[0] === '+' ? prephone.substring(1) : prephone\n    return JSON.stringify({phone, code})\n  }\n\n  const body = getJson();\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/checkcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: SET_PHONE_APPROVED_SUCCESS\n    });\n  } catch (err) {\n    const data = {\n      phone_error: err.response\n    }\n    dispatch({\n      type: SET_PHONE_APPROVED_FAIL,\n      payload: data\n    })\n  }\n};\n\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      )\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\n\n\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n\n    const body = JSON.stringify({token: localStorage.getItem('access')});\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      )\n\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL\n      });\n    }\n\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL\n    });\n  }\n};\n\nexport const login = (data) => async dispatch => {\n  const config = {\n    headers: {\n            'Content-Type': 'application/json'\n        }\n  };\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    })\n  }\n};\n\nexport const signup = (data) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    })\n  }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({uid, token});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL\n    })\n  }\n};\n\nexport const reset_password = (email) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({email});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL\n    });\n  }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({uid, token, new_password, re_new_password});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_FAIL\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(clearReviews());\n};\n\nexport const update_user = ({name, full_name, city, birthday, avatar, about}) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    const content = JSON.stringify({name, full_name, city, birthday, avatar, about});\n\n    try {\n      const res = await axios.patch(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        content,\n        config\n      )\n\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_UPDATE_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_UPDATE_FAIL\n    });\n  }\n};\n\nexport const add_extra_phone = phone => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = JSON.stringify({ phone_number: phone })\n\n  try {\n    const res = await axios.patch(\n      `${process.env.REACT_APP_API_URL}/auth/users/phone_attach/`,\n      body,\n      config\n    )\n\n   const data = {\n     phone_number: phone,\n     id: res.data\n   } \n\n    dispatch({\n      type: USER_ADD_EXTRA_PHONE_SUCCESS,\n      payload: data\n    })\n  } catch (err) {\n    dispatch({\n      type: USER_ADD_EXTRA_PHONE_FAIL,\n    })\n  }\n}\n\nexport const update_user_service_category =\n  ({ name, full_name, city, birthday, avatar, about }) =>\n  async dispatch => {\n    if (localStorage.getItem('access')) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          Accept: 'application/json',\n        },\n      }\n\n      const content = JSON.stringify({\n        name,\n        full_name,\n        city,\n        birthday,\n        avatar,\n        about,\n      })\n\n      try {\n        const res = await axios.patch(\n          `${process.env.REACT_APP_API_URL}/auth/users/services/`,\n          content,\n          config\n        )\n\n        dispatch({\n          type: USER_UPDATE_SUCCESS,\n          payload: res.data,\n        })\n      } catch (err) {\n        dispatch({\n          type: USER_UPDATE_FAIL,\n        })\n      }\n    } else {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n      })\n    }\n  }\n","export const SET_SEARCH_REQUEST_SUCCESS = \"SET_SEARCH_REQUEST_SUCCESS\";\n\nexport const searchRequestSuccess = request => async dispatch => {\n  const getPhone = n => {\n    if(n){\n      const phone = n.replace(/[^+\\d]/g, '')\n      return phone[0] === '+' ? phone.substring(1) : phone\n    }\n  }\n  dispatch({\n    type: SET_SEARCH_REQUEST_SUCCESS,\n    payload: getPhone(request),\n  })\n}\n","import axios from \"axios\";\n\nexport const GET_REVIEW_TEMPLATE_SUCCESS = \"GET_REVIEW_TEMPLATE_SUCCESS\";\nexport const GET_REVIEW_TEMPLATE_FAIL = \"GET_REVIEW_TEMPLATE_FAIL\";\nexport const SET_REVIEW_SUCCESS = \"SET_REVIEW_SUCCESS\";\nexport const SET_REVIEW_FAIL = \"SET_REVIEW_FAIL\";\nexport const GET_REVIEWS_ABOUT_ME_SUCCESS = \"GET_REVIEWS_ABOUT_ME_SUCCESS\";\nexport const GET_REVIEWS_ABOUT_ME_FAIL = \"GET_REVIEWS_ABOUT_ME_FAIL\";\nexport const GET_MY_REVIEWS_SUCCESS = \"GET_MY_REVIEWS_SUCCESS\";\nexport const GET_MY_REVIEWS_FAIL = \"GET_MY_REVIEWS_FAIL\";\nexport const SET_COMMENT_SUCCESS = \"SET_COMMENT_SUCCESS\";\nexport const SET_COMMENT_FAIL = \"SET_COMMENT_FAIL\";\nexport const CLEAR_REVIEWS = \"CLEAR_REVIEWS\";\nexport const RESET_STATUS = 'RESET_STATUS'\nexport const RESET_REVIEW_ERROR = 'RESET_REVIEW_ERROR'\n\n\nexport const getReviewTemplates = n => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    \n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/reviewtemplates/?is_customer=${n}`,\n      config\n    )\n\n    const data = {\n      templates: res.data\n    }\n\n    dispatch({\n      type: GET_REVIEW_TEMPLATE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEW_TEMPLATE_FAIL\n    })\n  }\n};\n\nexport const setReview = ({phone_number, attributes, body}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  const content = JSON.stringify({ phone_number, attributes, body })\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/reviews/`,\n      content,\n      config\n    )\n\n    dispatch({\n      type: SET_REVIEW_SUCCESS,\n      payload: res.status\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_REVIEW_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n};\n\nexport const resetReviewError = () => dispatch => {\n  dispatch({\n    type: RESET_REVIEW_ERROR,\n  })\n};\n\nexport const getReviewsAboutMe = phone_number => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  const getPhone = (n) => {\n    const phone = n.replace(/[^+\\d]/g, '')\n    return phone[0] === '+' ? phone.substring(1) : phone\n  }\n\n  try {\n    const res = await axios.get(\n      `${\n        process.env.REACT_APP_API_URL\n      }/api/reviews/?phone__phone_number=${getPhone(phone_number)}/`,\n      config\n    )\n\n    const data = {\n      reviews_about_me: res.data\n    }\n\n    dispatch({\n      type: GET_REVIEWS_ABOUT_ME_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEWS_ABOUT_ME_FAIL,\n      payload: err.massage\n    })\n  }\n};\n\nexport const getMyReviews = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/reviews/?owner=${id}`,\n      config\n    )\n\n    const data = {\n      my_reviews: res.data\n    }\n\n    dispatch({\n      type: GET_MY_REVIEWS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_MY_REVIEWS_FAIL,\n      payload: err\n    })\n  }\n};\n\nexport const setComment = (review, body, owner_id) => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  const content = JSON.stringify({review, body});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/comments/`,\n      content,\n      config\n    )\n\n    dispatch({\n      type: SET_COMMENT_SUCCESS\n    });\n    dispatch(getMyReviews(owner_id));\n  } catch (err) {\n    dispatch({\n      type: SET_COMMENT_FAIL,\n      payload: err,\n    })\n  }\n};\n\nexport const clearReviews = () => dispatch => {\n  dispatch({\n    type: CLEAR_REVIEWS\n  });\n};\n\nexport const resetStatus = () => dispatch => {\n  dispatch({\n    type: RESET_STATUS,\n  })\n};\n\n","import { SET_SEARCH_REQUEST_SUCCESS } from \"../actions/searchActions\";\n\nconst initState = {\n  request: \"\"\n};\n\nconst searchReducer = (state = initState, action) => {\n  const {type, payload} = action\n\n  switch (type) {\n    case SET_SEARCH_REQUEST_SUCCESS:\n      return {\n        ...state,\n        request: payload\n      }\n    default:\n      return {\n        ...state,\n      }\n  }\n};\n\nexport default searchReducer;\n","import {\n  SET_PHONE_APPROVED_SUCCESS,\n  SET_PHONE_APPROVED_FAIL,\n  GET_PHONE_CODE_SUCCESS,\n  GET_PHONE_CODE_FAIL,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  LOGOUT,\n  USER_ADD_EXTRA_PHONE_SUCCESS,\n  USER_ADD_EXTRA_PHONE_FAIL,\n} from '../actions/authActions'\n\nconst initialState = {\n  phone_approved: false,\n  phone_error: '',\n  phone: '',\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_PHONE_APPROVED_SUCCESS:\n      return {\n        ...state,\n        phone_approved: true,\n      }\n    case USER_ADD_EXTRA_PHONE_SUCCESS:\n      return {\n        ...state,\n        user: state.user.phones.push(payload),\n      }\n    case SET_PHONE_APPROVED_FAIL:\n    case GET_PHONE_CODE_FAIL:\n      return {\n        ...state,\n        phone_error: payload.phone_error,\n      }\n    case GET_PHONE_CODE_SUCCESS:\n      return {\n        ...state,\n        phone: payload.phone,\n      }\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: true,\n      }\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access)\n      localStorage.setItem('refresh', payload.refresh)\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: false,\n      }\n    case USER_LOADED_SUCCESS:\n    case USER_UPDATE_SUCCESS:\n      return {\n        ...state,\n        phone: '',\n        user: payload,\n      }\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: false,\n      }\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        phone: '',\n        user: null,\n      }\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access')\n      localStorage.removeItem('refresh')\n      return {\n        ...state,\n        phone: '',\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      }\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n    case USER_UPDATE_FAIL:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","import {\n  GET_REVIEW_TEMPLATE_SUCCESS,\n  GET_REVIEW_TEMPLATE_FAIL,\n  SET_REVIEW_SUCCESS,\n  SET_REVIEW_FAIL,\n  GET_REVIEWS_ABOUT_ME_SUCCESS,\n  GET_REVIEWS_ABOUT_ME_FAIL,\n  GET_MY_REVIEWS_SUCCESS,\n  GET_MY_REVIEWS_FAIL,\n  SET_COMMENT_SUCCESS,\n  CLEAR_REVIEWS,\n  SET_COMMENT_FAIL,\n  RESET_STATUS,\n  RESET_REVIEW_ERROR,\n} from '../actions/reviewActions'\n\nconst initialState = {\n  review_templates: [],\n  reviews_about_me: [],\n  my_reviews: [],\n  set_review_success: '', \n  error: ''\n};\n\nconst reviewReducer = (state = initialState, action) => {\n  const {type, payload} = action;\n\n  switch (type) {\n    case GET_REVIEW_TEMPLATE_SUCCESS:\n      return {\n        ...state,\n        review_templates: payload,\n      }\n    case SET_REVIEW_SUCCESS:\n      return {\n        ...state,\n        set_review_success: payload,\n      }\n    case RESET_STATUS:\n      return {\n        ...state,\n        set_review_success: '',\n      }\n    case GET_REVIEWS_ABOUT_ME_SUCCESS:\n      return {\n        ...state,\n        reviews_about_me: payload.reviews_about_me,\n      }\n    case GET_MY_REVIEWS_SUCCESS:\n      return {\n        ...state,\n        my_reviews: payload.my_reviews,\n      }\n    case SET_REVIEW_FAIL:\n      return {\n        ...state,\n        error: payload,\n      }\n    case RESET_REVIEW_ERROR:\n      return {\n        ...state,\n        error: '',\n      }\n    case CLEAR_REVIEWS:\n      return {\n        ...state,\n        review_templates: [],\n        reviews_about_me: [],\n        my_reviews: [],\n      }\n    case GET_REVIEW_TEMPLATE_FAIL:\n    case SET_REVIEW_FAIL:\n    case GET_MY_REVIEWS_FAIL:\n    case SET_COMMENT_SUCCESS:\n    case SET_COMMENT_FAIL:\n    case GET_REVIEWS_ABOUT_ME_FAIL:\n    case SET_COMMENT_FAIL:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\n\nexport default reviewReducer;","import {\n  GET_ALL_CATEGORIES_SUCCESS,\n  GET_ALL_CATEGORIES_FAIL,\n  SET_CATEGORY_SUCCESS,\n  SET_CATEGORY_FAIL,\n  GET_ALL_SERVICES_SUCCESS,\n  GET_ALL_SERVICES_FAIL,\n  SET_SERVICE_SUCCESS,\n  SET_SERVICE_FAIL,\n  GET_ALL_USERS_SERVICES_SUCCESS,\n  GET_ALL_USERS_SERVICES_FAIL,\n  SET_USERS_SERVICE_SUCCESS,\n  SET_USERS_SERVICE_FAIL,\n} from '../actions/serviceActions'\n\nconst initialState = {\n  categories: [],\n  temp_title: '',\n  services: [],\n  service: {},\n  users_services: [],\n  error: '',\n}\n\nconst serviceReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_ALL_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: payload,\n      }\n    case GET_ALL_USERS_SERVICES_SUCCESS:\n      return {\n        ...state,\n        users_services: payload,\n      }\n    case SET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        categories: payload.data,\n        temp_title: payload.title,\n      }\n\n    case SET_SERVICE_SUCCESS:\n      return {\n        ...state,\n        service: payload.data,\n        temp_title: payload.title,\n      }\n\n    case GET_ALL_CATEGORIES_FAIL:\n      return {\n        ...state,\n      }\n    case SET_CATEGORY_FAIL:\n      return {\n        ...state,\n        error: payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default serviceReducer\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport reviewReducer from \"./reviewReducer\";\r\nimport serviceReducer from \"./serviceReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  searchData: searchReducer,\r\n  auth: authReducer,\r\n  review: reviewReducer,\r\n  service: serviceReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = props => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return props.children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import PropTypes from \"prop-types\";\r\nimport React, {useEffect, Suspense, lazy} from \"react\";\r\nimport ScrollToTop from \"./helpers/scroll-top\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport {ToastProvider} from \"react-toast-notifications\";\r\n// import {multilanguage, loadLanguages} from \"redux-multilanguage\";\r\n// import {connect} from \"react-redux\";\r\nimport {BreadcrumbsProvider} from \"react-breadcrumbs-dynamic\";\r\n\r\n// home pages\r\nconst Home = lazy(() => import(\"./pages/home/Home\"));\r\nconst ReviewsSearch = lazy(() => import(\"./pages/search/Search\"));\r\n// const MyAccount = lazy(() => import(\"./pages/other/MyAccount\"));\r\nconst MyProfile = lazy(() => import(\"./pages/other/MyProfile\"));\r\nconst Login = lazy(() => import(\"./pages/other/Login\"));\r\nconst Register = lazy(() => import(\"./pages/other/Register\"));\r\nconst PasswordReset = lazy(() => import(\"./pages/other/PasswordReset\"));\r\nconst PasswordConfirm = lazy(() => import(\"./pages/other/PasswordConfirm\"));\r\nconst RequestSent = lazy(() => import(\"./pages/other/RequestSent\"));\r\nconst AddReview = lazy(() => import(\"./pages/other/AddReview\"));\r\nconst NotFound = lazy(() => import(\"./pages/other/NotFound\"));\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <ToastProvider placement='bottom-left'>\r\n      <BreadcrumbsProvider>\r\n        <Router>\r\n          <ScrollToTop>\r\n            <Suspense\r\n              fallback={\r\n                <div className='flone-preloader-wrapper'>\r\n                  <div className='flone-preloader'>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path={process.env.PUBLIC_URL + '/'}\r\n                  component={Home}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/search'}\r\n                  component={ReviewsSearch}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/profile'}\r\n                  component={MyProfile}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/review'}\r\n                  component={AddReview}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/login'}\r\n                  component={Login}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/register'}\r\n                  component={Register}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/password-reset'}\r\n                  component={PasswordReset}\r\n                />\r\n\r\n                <Route\r\n                  path={\r\n                    process.env.PUBLIC_URL +\r\n                    '/password/reset/confirm/:uid/:token'\r\n                  }\r\n                  component={PasswordConfirm}\r\n                />\r\n\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/request-sent'}\r\n                  component={RequestSent}\r\n                />\r\n\r\n                <Route exact component={NotFound} />\r\n              </Switch>\r\n            </Suspense>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </BreadcrumbsProvider>\r\n    </ToastProvider>\r\n  )\r\n};\r\n\r\nApp.propTypes = {\r\n  dispatch: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n// export default connect()(multilanguage(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport products from \"./data/products.json\";\r\nimport App from \"./App\";\r\nimport \"./assets/scss/style.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  load(),\r\n  composeWithDevTools(applyMiddleware(thunk, save()))\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from 'axios'\n\nexport const GET_ALL_CATEGORIES_SUCCESS = 'GET_ALL_CATEGORIES_SUCCESS'\nexport const GET_ALL_CATEGORIES_FAIL = 'GET_ALL_CATEGORIES_FAIL'\nexport const SET_CATEGORY_SUCCESS = 'SET_CATEGORY_SUCCESS'\nexport const SET_CATEGORY_FAIL = 'SET_CATEGORY_FAIL'\nexport const GET_ALL_SERVICES_SUCCESS = 'GET_ALL_SERVICES_SUCCESS'\nexport const GET_ALL_SERVICES_FAIL = 'GET_ALL_SERVICES_FAIL'\nexport const SET_SERVICE_SUCCESS = 'SET_SERVICE_SUCCESS'\nexport const SET_SERVICE_FAIL = 'SET_SERVICE_FAIL'\nexport const GET_ALL_USERS_SERVICES_SUCCESS = 'GET_ALL_USERS_SERVICES_SUCCESS'\nexport const GET_ALL_USERS_SERVICES_FAIL = 'GET_ALL_USERS_SERVICES_FAIL'\nexport const SET_USERS_SERVICE_SUCCESS = 'SET_USERS_SERVICE_SUCCESS'\nexport const SET_USERS_SERVICE_FAIL = 'SET_USERS_SERVICE_FAIL'\n\nexport const get_all_categories = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      config\n    )\n\n    const data = {\n      templates: res.data,\n    }\n\n    dispatch({\n      type: GET_ALL_CATEGORIES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_CATEGORIES_FAIL,\n    })\n  }\n}\n\nexport const set_category = title => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify({ title: title })\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      content,\n      config\n    )\n\n    const payload = {\n      data: res.data,\n      title: title\n     }\n\n    dispatch({\n      type: SET_CATEGORY_SUCCESS,\n      payload: payload,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_CATEGORY_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n\nexport const set_service = (title, category_id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify({service: title})\n\n  try {\n    const res = await axios.patch(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/${category_id}/`,\n      content,\n      config\n    )\n\n    const payload = {\n      data: res.data,\n      title: ''\n     }\n\n    dispatch({\n      type: SET_SERVICE_SUCCESS,\n      payload: payload,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_SERVICE_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n\nexport const get_all_users_services = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/?services_accounts=${id}`,\n      config\n    )\n\n    dispatch({\n      type: GET_ALL_USERS_SERVICES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_USERS_SERVICES_FAIL,\n    })\n  }\n}\n\nexport const set_users_service = (title, category_id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify(title, category_id)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      content,\n      config\n    )\n\n    dispatch({\n      type: SET_USERS_SERVICE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_USERS_SERVICE_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n"],"sourceRoot":""}