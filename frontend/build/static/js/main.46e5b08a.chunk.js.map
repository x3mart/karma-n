{"version":3,"sources":["redux/actions/searchActions.js","redux/actions/authActions.js","redux/actions/reviewActions.js","redux/reducers/searchReducer.js","redux/reducers/authReducer.js","redux/reducers/reviewReducer.js","redux/reducers/serviceReducer.js","redux/reducers/rootReducer.js","helpers/scroll-top.js","App.js","serviceWorker.js","index.js","redux/actions/serviceActions.js"],"names":["SET_SEARCH_REQUEST_SUCCESS","searchRequestSuccess","request","dispatch","a","type","payload","n","phone","replace","substring","getPhone","GET_PHONE_CODE_SUCCESS","GET_PHONE_CODE_FAIL","GET_SCREENNAME_CODE_SUCCESS","CHECK_SCREENNAME_CODE_SUCCESS","RESET_SCREENNAME","DELETE_SCREENNAME_SUCCESS","SET_PHONE_APPROVED_SUCCESS","SET_PHONE_APPROVED_FAIL","SET_USER_STATUS_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_ADD_EXTRA_PHONE_SUCCESS","LOGOUT","getPhoneCode","raw","config","headers","body","prephone","JSON","stringify","getJson","axios","post","process","data","phone_error","response","getCode","Authorization","localStorage","getItem","Accept","screenname_error","checkCode","res","deleteScreenName","id","delete","resetScreenName","setUserStatus","status","setPhoneApproved","code","load_user","get","login","signup","console","log","reset_password","email","reset_password_confirm","uid","token","new_password","re_new_password","logout","clearReviews","update_user","name","full_name","city","birthday","avatar","about","content","patch","add_extra_phone","phone_number","GET_REVIEW_TEMPLATE_SUCCESS","GET_REVIEW_TEMPLATE_FAIL","SET_REVIEW_SUCCESS","SET_REVIEW_FAIL","SET_LIKES_SUCCESS","SET_COMMENTS_LIKES_SUCCESS","GET_REVIEWS_ABOUT_ME_SUCCESS","GET_REVIEWS_ABOUT_ME_FAIL","GET_MY_REVIEWS_SUCCESS","GET_MY_REVIEWS_FAIL","GET_REVIEWS_SUCCESS","SET_COMMENT_SUCCESS","SET_COMMENT_FAIL","CLEAR_REVIEWS","RESET_STATUS","RESET_REVIEW_ERROR","getReviewTemplates","templates","setReview","attributes","error","resetReviewError","getReviewsAboutMe","reviews_about_me","massage","getMyReviews","my_reviews","setComment","commented_review","resetStatus","getReviews","filter","reviews","reviews_results","results","setLikes","dislike","setCommentLikes","review_id","initState","searchReducer","state","action","initialState","screenname_sent_success","screenname_checked_success","phone_approved","access","refresh","isAuthenticated","user","user_status","authReducer","phones","push","setItem","removeItem","review_templates","set_review_success","reviewReducer","map","item","arr","comments","comment","count_comments","length","categories","temp_title","services","service","users_services","serviceReducer","GET_ALL_CATEGORIES_SUCCESS","GET_ALL_USERS_SERVICES_SUCCESS","SET_CATEGORY_SUCCESS","title","SET_SERVICE_SUCCESS","GET_ALL_CATEGORIES_FAIL","SET_CATEGORY_FAIL","rootReducer","combineReducers","searchData","auth","review","withRouter","props","useEffect","window","scrollTo","children","Home","lazy","ReviewsSearch","MyProfile","Login","Register","PasswordReset","PasswordConfirm","RequestSent","AddReview","NotFound","App","placement","fallback","className","exact","path","component","Boolean","location","hostname","match","store","createStore","load","composeWithDevTools","applyMiddleware","thunk","save","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","get_all_categories","set_category","set_service","category_id","get_all_users_services","set_users_service"],"mappings":"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","file":"static/js/main.46e5b08a.chunk.js","sourcesContent":["export const SET_SEARCH_REQUEST_SUCCESS = \"SET_SEARCH_REQUEST_SUCCESS\";\n\nexport const searchRequestSuccess = request => async dispatch => {\n  const getPhone = n => {\n    if(n){\n      const phone = n.replace(/[^+\\d]/g, '')\n      return phone[0] === '+' ? phone.substring(1) : phone\n    }\n  }\n  dispatch({\n    type: SET_SEARCH_REQUEST_SUCCESS,\n    payload: getPhone(request),\n  })\n}\n","import axios from \"axios\";\nimport Cookies from 'js-cookie';\nimport {clearReviews} from \"./reviewActions\";\n\nexport const GET_PHONE_CODE_SUCCESS = \"GET_PHONE_CODE_SUCCESS\";\nexport const GET_PHONE_CODE_FAIL = \"GET_PHONE_CODE_FAIL\";\nexport const GET_SCREENNAME_CODE_SUCCESS = \"GET_SCREENNAME_CODE_SUCCESS\";\nexport const GET_SCREENNAME_CODE_FAIL = \"GET_SCREENNAME_CODE_FAIL\";\nexport const CHECK_SCREENNAME_CODE_SUCCESS = 'CHECK_SCREENNAME_CODE_SUCCESS'\nexport const CHECK_SCREENNAME_CODE_FAIL = 'CHECK_SCREENNAME_CODE_FAIL'\nexport const RESET_SCREENNAME = 'RESET_SCREENNAME'\nexport const DELETE_SCREENNAME_SUCCESS = 'DELETE_SCREENNAME_SUCCESS'\nexport const DELETE_SCREENNAME_FAIL = 'DELETE_SCREENNAME_FAIL'\nexport const SET_PHONE_APPROVED_SUCCESS = \"SET_PHONE_APPROVED_SUCCESS\";\nexport const SET_PHONE_APPROVED_FAIL = \"SET_PHONE_APPROVED_FAIL\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\n\nexport const SET_USER_STATUS_SUCCESS = 'SET_USER_STATUS_SUCCESS'\nexport const SET_USER_STATUS_FAIL = 'SET_USER_STATUS_FAIL'\n\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_ADD_EXTRA_PHONE_SUCCESS = 'USER_ADD_EXTRA_PHONE_SUCCESS'\nexport const USER_ADD_EXTRA_PHONE_FAIL = 'USER_ADD_EXTRA_PHONE_FAIL'\nexport const LOGOUT = 'LOGOUT';\n\nexport const getPhoneCode = (raw) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const getJson = () => {\n    const prephone = raw.replace(/[^+\\d]/g, '')\n    const phone = prephone[0] === '+' ? prephone.substring(1) : prephone\n    return JSON.stringify({phone})\n  }\n\n  const body = getJson();\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/getcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: GET_PHONE_CODE_SUCCESS,\n      payload: {phone: raw}\n    });\n  } catch (err) {\n    const data = {\n      phone_error: err.response\n    }\n    dispatch({\n      type: GET_PHONE_CODE_FAIL,\n      payload: data\n    })\n  }\n};\n\nexport const getCode = (data) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = JSON.stringify(data)\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/getcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: GET_SCREENNAME_CODE_SUCCESS,\n    })\n  } catch (err) {\n    const data = {\n      screenname_error: err.response,\n    }\n    dispatch({\n      type: GET_SCREENNAME_CODE_FAIL,\n      payload: data,\n    })\n  }\n}\n\nexport const checkCode = data => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/checkcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: CHECK_SCREENNAME_CODE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: CHECK_SCREENNAME_CODE_FAIL,\n      payload: err.response,\n    })\n  }\n}\n\nexport const deleteScreenName = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/api/reviewables/${id}/`,\n      config\n    )\n\n    dispatch({\n      type: DELETE_SCREENNAME_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: DELETE_SCREENNAME_FAIL,\n      payload: err.response,\n    })\n  }\n}\n\nexport const resetScreenName = () => dispatch => {\n  dispatch({\n    type: RESET_SCREENNAME,\n  })\n}\n\nexport const setUserStatus = status => dispatch => {\n  dispatch({\n    type: SET_USER_STATUS_SUCCESS,\n    payload: status,\n  })\n}\n\nexport const setPhoneApproved = (raw, code) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const getJson = () => {\n    const prephone = raw.replace(/[^+\\d]/g, '')\n    const phone = prephone[0] === '+' ? prephone.substring(1) : prephone\n    return JSON.stringify({phone, code})\n  }\n\n  const body = getJson();\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/register/checkcode/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: SET_PHONE_APPROVED_SUCCESS\n    });\n  } catch (err) {\n    const data = {\n      phone_error: err.response\n    }\n    dispatch({\n      type: SET_PHONE_APPROVED_FAIL,\n      payload: data\n    })\n  }\n};\n\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      )\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      })\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\n\n\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n\n    const body = JSON.stringify({token: localStorage.getItem('access')});\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      )\n\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL\n      });\n    }\n\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL\n    });\n  }\n};\n\nexport const login = (data) => async dispatch => {\n  const config = {\n    headers: {\n            'Content-Type': 'application/json'\n        }\n  };\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    })\n  }\n};\n\nexport const signup = (data) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/`,\n      body,\n      config\n    )\n\n    console.log(res)\n\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      // payload: res.status\n    });\n    dispatch(load_user())\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    })\n  }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({uid, token});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL\n    })\n  }\n};\n\nexport const reset_password = (email) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({email});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL\n    });\n  }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({uid, token, new_password, re_new_password});\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_FAIL\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(clearReviews());\n};\n\nexport const update_user = ({name, full_name, city, birthday, avatar, about}) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    console.log(avatar)\n\n    const content = JSON.stringify({name, full_name, city, birthday, avatar, about});\n\n    try {\n      const res = await axios.patch(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        content,\n        config\n      )\n\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_UPDATE_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_UPDATE_FAIL\n    });\n  }\n};\n\nexport const add_extra_phone = phone => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = JSON.stringify({ phone_number: phone })\n\n  try {\n    const res = await axios.patch(\n      `${process.env.REACT_APP_API_URL}/auth/users/phone_attach/`,\n      body,\n      config\n    )\n\n   const data = {\n     phone_number: phone,\n     id: res.data\n   } \n\n    dispatch({\n      type: USER_ADD_EXTRA_PHONE_SUCCESS,\n      payload: data\n    })\n  } catch (err) {\n    dispatch({\n      type: USER_ADD_EXTRA_PHONE_FAIL,\n    })\n  }\n}\n\nexport const update_user_service_category =\n  ({ name, full_name, city, birthday, avatar, about }) =>\n  async dispatch => {\n    if (localStorage.getItem('access')) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          Accept: 'application/json',\n        },\n      }\n\n      const content = JSON.stringify({\n        name,\n        full_name,\n        city,\n        birthday,\n        avatar,\n        about,\n      })\n\n      try {\n        const res = await axios.patch(\n          `${process.env.REACT_APP_API_URL}/auth/users/services/`,\n          content,\n          config\n        )\n\n        dispatch({\n          type: USER_UPDATE_SUCCESS,\n          payload: res.data,\n        })\n      } catch (err) {\n        dispatch({\n          type: USER_UPDATE_FAIL,\n        })\n      }\n    } else {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n      })\n    }\n  }\n","import axios from \"axios\";\n\nexport const GET_REVIEW_TEMPLATE_SUCCESS = \"GET_REVIEW_TEMPLATE_SUCCESS\";\nexport const GET_REVIEW_TEMPLATE_FAIL = \"GET_REVIEW_TEMPLATE_FAIL\";\nexport const SET_REVIEW_SUCCESS = \"SET_REVIEW_SUCCESS\";\nexport const SET_REVIEW_FAIL = \"SET_REVIEW_FAIL\";\nexport const SET_LIKES_SUCCESS = 'SET_LIKES_SUCCESS'\nexport const SET_LIKES_FAIL = 'SET_LIKES_FAIL'\nexport const SET_COMMENTS_LIKES_SUCCESS = 'SET_COMMENTS_LIKES_SUCCESS'\nexport const SET_COMMENTS_LIKES_FAIL = 'SET_COMMENTS_LIKES_FAIL'\nexport const GET_REVIEWS_ABOUT_ME_SUCCESS = \"GET_REVIEWS_ABOUT_ME_SUCCESS\";\nexport const GET_REVIEWS_ABOUT_ME_FAIL = \"GET_REVIEWS_ABOUT_ME_FAIL\";\nexport const GET_MY_REVIEWS_SUCCESS = \"GET_MY_REVIEWS_SUCCESS\";\nexport const GET_MY_REVIEWS_FAIL = \"GET_MY_REVIEWS_FAIL\";\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\nexport const SET_COMMENT_SUCCESS = \"SET_COMMENT_SUCCESS\";\nexport const SET_COMMENT_FAIL = \"SET_COMMENT_FAIL\";\nexport const CLEAR_REVIEWS = \"CLEAR_REVIEWS\";\nexport const RESET_STATUS = 'RESET_STATUS'\nexport const RESET_REVIEW_ERROR = 'RESET_REVIEW_ERROR'\n\n\nexport const getReviewTemplates = n => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    \n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/reviewtemplates/?about_customer=${n}`,\n      config\n    )\n\n    const data = {\n      templates: res.data\n    }\n\n    dispatch({\n      type: GET_REVIEW_TEMPLATE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEW_TEMPLATE_FAIL\n    })\n  }\n};\n\nexport const setReview = ({phone_number, attributes, body}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  const content = JSON.stringify({ phone_number, attributes, body })\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/reviews/`,\n      content,\n      config\n    )\n\n    dispatch({\n      type: SET_REVIEW_SUCCESS,\n      payload: res.status\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_REVIEW_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n};\n\nexport const resetReviewError = () => dispatch => {\n  dispatch({\n    type: RESET_REVIEW_ERROR,\n  })\n};\n\nexport const getReviewsAboutMe = phone_number => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  const getPhone = (n) => {\n    const phone = n.replace(/[^+\\d]/g, '')\n    return phone[0] === '+' ? phone.substring(1) : phone\n  }\n\n  try {\n    const res = await axios.get(\n      `${\n        process.env.REACT_APP_API_URL\n      }/api/reviews/?phone__phone_number=${getPhone(phone_number)}/`,\n      config\n    )\n\n    const data = {\n      reviews_about_me: res.data\n    }\n\n    dispatch({\n      type: GET_REVIEWS_ABOUT_ME_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEWS_ABOUT_ME_FAIL,\n      payload: err.massage\n    })\n  }\n};\n\nexport const getMyReviews = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/reviews/?owner=${id}`,\n      config\n    )\n\n    const data = {\n      my_reviews: res.data\n    }\n\n    dispatch({\n      type: GET_MY_REVIEWS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_MY_REVIEWS_FAIL,\n      payload: err\n    })\n  }\n};\n\nexport const setComment = data => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  console.log(data)\n\n  const content = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/comments/`,\n      content,\n      config\n    )\n\n    const payload = {\n      data: res.data,\n      id: data.commented_review,\n    }\n\n    console.log(payload)\n\n    dispatch({\n      type: SET_COMMENT_SUCCESS,\n      payload: payload,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_COMMENT_FAIL,\n      payload: err,\n    })\n  }\n}\n\nexport const clearReviews = () => dispatch => {\n  dispatch({\n    type: CLEAR_REVIEWS\n  });\n};\n\nexport const resetStatus = () => dispatch => {\n  dispatch({\n    type: RESET_STATUS,\n  })\n};\n\nexport const getReviews = filter => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/reviews/${filter}`,\n      config\n    )\n\n    const data = {\n      reviews: res.data,\n      reviews_results: res.data.results\n    }\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: err,\n    })\n  }\n}\n\nexport const setLikes = ({id, dislike}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = dislike ? JSON.stringify(dislike) : ''\n\n  try {\n    const res = await axios.patch(\n      `${process.env.REACT_APP_API_URL}/api/reviews/${id}/like/`,\n      body,\n      config\n    )\n\n    dispatch({\n      type: SET_LIKES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_LIKES_FAIL,\n      payload: err,\n    })\n  }\n}\n\nexport const setCommentLikes =\n  ({review_id, id, dislike }) =>\n  async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        Accept: 'application/json',\n      },\n    }\n\n    const body = dislike ? JSON.stringify(dislike) : ''\n\n    try {\n      const res = await axios.patch(\n        `${process.env.REACT_APP_API_URL}/api/comments/${id}/like/`,\n        body,\n        config\n      )\n\n      const data = {\n        data: res.data,\n        review_id: review_id,\n      }\n\n      dispatch({\n        type: SET_COMMENTS_LIKES_SUCCESS,\n        payload: data,\n      })\n    } catch (err) {\n      dispatch({\n        type: SET_COMMENTS_LIKES_FAIL,\n        payload: err,\n      })\n    }\n  }","import { SET_SEARCH_REQUEST_SUCCESS } from \"../actions/searchActions\";\n\nconst initState = {\n  request: \"\"\n};\n\nconst searchReducer = (state = initState, action) => {\n  const {type, payload} = action\n\n  switch (type) {\n    case SET_SEARCH_REQUEST_SUCCESS:\n      return {\n        ...state,\n        request: payload\n      }\n    default:\n      return {\n        ...state,\n      }\n  }\n};\n\nexport default searchReducer;\n","import {\n  SET_PHONE_APPROVED_SUCCESS,\n  SET_PHONE_APPROVED_FAIL,\n  GET_SCREENNAME_CODE_SUCCESS,\n  GET_SCREENNAME_CODE_FAIL,\n  CHECK_SCREENNAME_CODE_SUCCESS,\n  CHECK_SCREENNAME_CODE_FAIL,\n  RESET_SCREENNAME,\n  DELETE_SCREENNAME_SUCCESS,\n  SET_USER_STATUS_SUCCESS,\n  DELETE_SCREENNAME_FAIL,\n  GET_PHONE_CODE_SUCCESS,\n  GET_PHONE_CODE_FAIL,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  LOGOUT,\n  USER_ADD_EXTRA_PHONE_SUCCESS,\n  USER_ADD_EXTRA_PHONE_FAIL,\n} from '../actions/authActions'\n\nconst initialState = {\n  screenname_sent_success: false,\n  screenname_checked_success: false,\n  phone_approved: false,\n  phone_error: '',\n  phone: '',\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  // reg_status: null,\n  user: null,\n  user_status: '',\n}\n\nconst authReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_PHONE_APPROVED_SUCCESS:\n      return {\n        ...state,\n        phone_approved: true,\n      }\n    case GET_SCREENNAME_CODE_SUCCESS:\n      return {\n        ...state,\n        screenname_sent_success: true,\n      }\n    case SET_USER_STATUS_SUCCESS:\n      return {\n        ...state,\n        user_status: payload,\n      }\n    case CHECK_SCREENNAME_CODE_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n        screenname_sent_success: false,\n        screenname_checked_success: true,\n      }\n    case RESET_SCREENNAME:\n      return {\n        ...state,\n        screenname_sent_success: false,\n        screenname_checked_success: false,\n      }\n    case DELETE_SCREENNAME_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n      }\n    case USER_ADD_EXTRA_PHONE_SUCCESS:\n      return {\n        ...state,\n        user: state.user.phones.push(payload),\n      }\n    case SET_PHONE_APPROVED_FAIL:\n    case GET_PHONE_CODE_FAIL:\n      return {\n        ...state,\n        phone_error: payload.phone_error,\n      }\n    case GET_PHONE_CODE_SUCCESS:\n      return {\n        ...state,\n        phone: payload.phone,\n      }\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: true,\n      }\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access)\n      localStorage.setItem('refresh', payload.refresh)\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        // reg_status: payload,\n        isAuthenticated: true,\n      }\n    case USER_LOADED_SUCCESS:\n    case USER_UPDATE_SUCCESS:\n      return {\n        ...state,\n        phone: '',\n        user: payload,\n      }\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        phone: '',\n        isAuthenticated: false,\n      }\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        phone: '',\n        user: null,\n      }\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access')\n      localStorage.removeItem('refresh')\n      return {\n        ...state,\n        phone: '',\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      }\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n    case USER_UPDATE_FAIL:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","import {\n  GET_REVIEW_TEMPLATE_SUCCESS,\n  GET_REVIEW_TEMPLATE_FAIL,\n  SET_REVIEW_SUCCESS,\n  SET_REVIEW_FAIL,\n  GET_REVIEWS_ABOUT_ME_SUCCESS,\n  GET_REVIEWS_ABOUT_ME_FAIL,\n  GET_MY_REVIEWS_SUCCESS,\n  GET_MY_REVIEWS_FAIL,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  SET_COMMENT_SUCCESS,\n  CLEAR_REVIEWS,\n  SET_COMMENT_FAIL,\n  RESET_STATUS,\n  RESET_REVIEW_ERROR,\n  SET_LIKES_SUCCESS,\n  SET_LIKES_FAIL,\n  SET_COMMENTS_LIKES_SUCCESS,\n  SET_COMMENTS_LIKES_FAIL,\n} from '../actions/reviewActions'\n\nconst initialState = {\n  review_templates: [],\n  reviews_about_me: [],\n  my_reviews: [],\n  reviews: {},\n  set_review_success: '',\n  error: '',\n  results: [],\n}\n\nconst updateArray = (obj, payload) => {\n  let arr = obj.results\n  obj.results = arr.map(item => (item.id === payload.id ? payload : item))\n  return obj\n}\n\nconst reviewReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_REVIEW_TEMPLATE_SUCCESS:\n      return {\n        ...state,\n        review_templates: payload,\n      }\n    case SET_REVIEW_SUCCESS:\n      return {\n        ...state,\n        set_review_success: payload,\n      }\n    case RESET_STATUS:\n      return {\n        ...state,\n        set_review_success: '',\n      }\n    case SET_LIKES_SUCCESS:\n      return {\n        ...state,\n        results: state.results.map(item =>\n          item.id === payload.id ? payload : item\n        ),\n      }\n    case SET_COMMENT_SUCCESS:\n      return {\n        ...state,\n        results: state.results.map(item => {\n          if (item.id === payload.id) {\n            let arr = item.comments\n            item.comments = arr.map(comment =>\n              comment.id === payload.data.id ? payload.data : comment\n            )\n            item.count_comments = item.comments.length()\n            console.log(item.count_comments)\n            console.log(item.comments.length())\n            return item\n          } else {\n            return item\n          }\n        }),\n      }\n    case SET_COMMENTS_LIKES_SUCCESS:\n      return {\n        ...state,\n        results: state.results.map(item => {\n          if (item.id === payload.review_id) {\n            let arr = item.comments\n            item.comments = arr.map(comment =>\n              comment.id === payload.data.id ? payload.data : comment\n            )\n            return item\n          } else {\n            return item\n          }\n        }),\n      }\n    case GET_REVIEWS_ABOUT_ME_SUCCESS:\n      return {\n        ...state,\n        reviews_about_me: payload.reviews_about_me,\n      }\n    case GET_MY_REVIEWS_SUCCESS:\n      return {\n        ...state,\n        my_reviews: payload.my_reviews,\n      }\n    case GET_REVIEWS_SUCCESS:\n      return {\n        ...state,\n        reviews: payload.reviews,\n        results: payload.reviews_results,\n      }\n    case SET_REVIEW_FAIL:\n      return {\n        ...state,\n        error: payload,\n      }\n    case RESET_REVIEW_ERROR:\n      return {\n        ...state,\n        error: '',\n      }\n    case CLEAR_REVIEWS:\n      return {\n        ...state,\n        review_templates: [],\n        reviews_about_me: [],\n        my_reviews: [],\n      }\n    case GET_REVIEW_TEMPLATE_FAIL:\n    case SET_REVIEW_FAIL:\n    case GET_MY_REVIEWS_FAIL:\n    case GET_REVIEWS_ABOUT_ME_FAIL:\n    case SET_COMMENT_FAIL:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reviewReducer\n","import {\n  GET_ALL_CATEGORIES_SUCCESS,\n  GET_ALL_CATEGORIES_FAIL,\n  SET_CATEGORY_SUCCESS,\n  SET_CATEGORY_FAIL,\n  GET_ALL_SERVICES_SUCCESS,\n  GET_ALL_SERVICES_FAIL,\n  SET_SERVICE_SUCCESS,\n  SET_SERVICE_FAIL,\n  GET_ALL_USERS_SERVICES_SUCCESS,\n  GET_ALL_USERS_SERVICES_FAIL,\n  SET_USERS_SERVICE_SUCCESS,\n  SET_USERS_SERVICE_FAIL,\n} from '../actions/serviceActions'\n\nconst initialState = {\n  categories: [],\n  temp_title: '',\n  services: [],\n  service: {},\n  users_services: [],\n  error: '',\n}\n\nconst serviceReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_ALL_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: payload,\n      }\n    case GET_ALL_USERS_SERVICES_SUCCESS:\n      return {\n        ...state,\n        users_services: payload,\n      }\n    case SET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        categories: payload.data,\n        temp_title: payload.title,\n      }\n\n    case SET_SERVICE_SUCCESS:\n      return {\n        ...state,\n        service: payload.data,\n        temp_title: payload.title,\n      }\n\n    case GET_ALL_CATEGORIES_FAIL:\n      return {\n        ...state,\n      }\n    case SET_CATEGORY_FAIL:\n      return {\n        ...state,\n        error: payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default serviceReducer\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport reviewReducer from \"./reviewReducer\";\r\nimport serviceReducer from \"./serviceReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  searchData: searchReducer,\r\n  auth: authReducer,\r\n  review: reviewReducer,\r\n  service: serviceReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = props => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return props.children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import PropTypes from \"prop-types\";\r\nimport React, {useEffect, Suspense, lazy} from \"react\";\r\nimport ScrollToTop from \"./helpers/scroll-top\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport {ToastProvider} from \"react-toast-notifications\";\r\n// import {multilanguage, loadLanguages} from \"redux-multilanguage\";\r\n// import {connect} from \"react-redux\";\r\nimport {BreadcrumbsProvider} from \"react-breadcrumbs-dynamic\";\r\n\r\n// home pages\r\nconst Home = lazy(() => import(\"./pages/home/Home\"));\r\nconst ReviewsSearch = lazy(() => import(\"./pages/search/Search\"));\r\n// const MyAccount = lazy(() => import(\"./pages/other/MyAccount\"));\r\nconst MyProfile = lazy(() => import(\"./pages/other/MyProfile\"));\r\nconst Login = lazy(() => import(\"./pages/other/Login\"));\r\nconst Register = lazy(() => import(\"./pages/other/Register\"));\r\nconst PasswordReset = lazy(() => import(\"./pages/other/PasswordReset\"));\r\nconst PasswordConfirm = lazy(() => import(\"./pages/other/PasswordConfirm\"));\r\nconst RequestSent = lazy(() => import(\"./pages/other/RequestSent\"));\r\nconst AddReview = lazy(() => import(\"./pages/other/AddReview\"));\r\nconst NotFound = lazy(() => import(\"./pages/other/NotFound\"));\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <ToastProvider placement='bottom-left'>\r\n      <BreadcrumbsProvider>\r\n        <Router>\r\n          <ScrollToTop>\r\n            <Suspense\r\n              fallback={\r\n                <div className='flone-preloader-wrapper'>\r\n                  <div className='flone-preloader'>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path={process.env.PUBLIC_URL + '/'}\r\n                  component={Home}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/search'}\r\n                  component={ReviewsSearch}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/profile'}\r\n                  component={MyProfile}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/review'}\r\n                  component={AddReview}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/login'}\r\n                  component={Login}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/register'}\r\n                  component={Register}\r\n                />\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/password-reset'}\r\n                  component={PasswordReset}\r\n                />\r\n\r\n                <Route\r\n                  path={\r\n                    process.env.PUBLIC_URL +\r\n                    '/password/reset/confirm/:uid/:token'\r\n                  }\r\n                  component={PasswordConfirm}\r\n                />\r\n\r\n                <Route\r\n                  path={process.env.PUBLIC_URL + '/request-sent'}\r\n                  component={RequestSent}\r\n                />\r\n\r\n                <Route exact component={NotFound} />\r\n              </Switch>\r\n            </Suspense>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </BreadcrumbsProvider>\r\n    </ToastProvider>\r\n  )\r\n};\r\n\r\nApp.propTypes = {\r\n  dispatch: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n// export default connect()(multilanguage(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport products from \"./data/products.json\";\r\nimport App from \"./App\";\r\nimport \"./assets/scss/style.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  load(),\r\n  composeWithDevTools(applyMiddleware(thunk, save()))\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from 'axios'\n\nexport const GET_ALL_CATEGORIES_SUCCESS = 'GET_ALL_CATEGORIES_SUCCESS'\nexport const GET_ALL_CATEGORIES_FAIL = 'GET_ALL_CATEGORIES_FAIL'\nexport const SET_CATEGORY_SUCCESS = 'SET_CATEGORY_SUCCESS'\nexport const SET_CATEGORY_FAIL = 'SET_CATEGORY_FAIL'\nexport const GET_ALL_SERVICES_SUCCESS = 'GET_ALL_SERVICES_SUCCESS'\nexport const GET_ALL_SERVICES_FAIL = 'GET_ALL_SERVICES_FAIL'\nexport const SET_SERVICE_SUCCESS = 'SET_SERVICE_SUCCESS'\nexport const SET_SERVICE_FAIL = 'SET_SERVICE_FAIL'\nexport const GET_ALL_USERS_SERVICES_SUCCESS = 'GET_ALL_USERS_SERVICES_SUCCESS'\nexport const GET_ALL_USERS_SERVICES_FAIL = 'GET_ALL_USERS_SERVICES_FAIL'\nexport const SET_USERS_SERVICE_SUCCESS = 'SET_USERS_SERVICE_SUCCESS'\nexport const SET_USERS_SERVICE_FAIL = 'SET_USERS_SERVICE_FAIL'\n\nexport const get_all_categories = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      config\n    )\n\n    const data = {\n      templates: res.data,\n    }\n\n    dispatch({\n      type: GET_ALL_CATEGORIES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_CATEGORIES_FAIL,\n    })\n  }\n}\n\nexport const set_category = title => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify({ title: title })\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      content,\n      config\n    )\n\n    const payload = {\n      data: res.data,\n      title: title\n     }\n\n    dispatch({\n      type: SET_CATEGORY_SUCCESS,\n      payload: payload,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_CATEGORY_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n\nexport const set_service = (title, category_id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify({service: title})\n\n  try {\n    const res = await axios.patch(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/${category_id}/`,\n      content,\n      config\n    )\n\n    const payload = {\n      data: res.data,\n      title: ''\n     }\n\n    dispatch({\n      type: SET_SERVICE_SUCCESS,\n      payload: payload,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_SERVICE_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n\nexport const get_all_users_services = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/?services_accounts=${id}`,\n      config\n    )\n\n    dispatch({\n      type: GET_ALL_USERS_SERVICES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_USERS_SERVICES_FAIL,\n    })\n  }\n}\n\nexport const set_users_service = (title, category_id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const content = JSON.stringify(title, category_id)\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/servicecategories/`,\n      content,\n      config\n    )\n\n    dispatch({\n      type: SET_USERS_SERVICE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: SET_USERS_SERVICE_FAIL,\n      payload: err.response.data.error,\n    })\n  }\n}\n"],"sourceRoot":""}