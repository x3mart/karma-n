# Generated by Django 3.2.3 on 2021-12-30 10:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reviewables', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Название')),
                ('is_customer', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Название характеристики',
                'verbose_name_plural': 'Названия характеристик',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Коментарий',
                'verbose_name_plural': 'Коментарии',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('rating', models.DecimalField(decimal_places=1, default=5, max_digits=2)),
                ('is_customer', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Шаблон отзыва',
                'verbose_name_plural': 'Шаблоны отзывов',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, default=5, max_digits=3, null=True)),
                ('about_customer', models.BooleanField(default=False, verbose_name='О заказчике')),
                ('count_likes', models.IntegerField(default=0, verbose_name='Количество лайков')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL)),
                ('reviewable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='reviewables.reviewable')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='services.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dislike', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='reviews.comment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='reviews.review')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reviews.review'),
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=1, default=5, max_digits=2)),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='reviews.review')),
                ('review_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='reviews.reviewtemplate')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='reviews.attributetitle')),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
            },
        ),
        migrations.CreateModel(
            name='AttributeTitleCustomer',
            fields=[
            ],
            options={
                'verbose_name': 'Название характеристики отзывов на Заказчика',
                'verbose_name_plural': 'Названия характеристик отзывов на Заказчика',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('reviews.attributetitle',),
        ),
        migrations.CreateModel(
            name='AttributeTitleExecuter',
            fields=[
            ],
            options={
                'verbose_name': 'Название характеристики отзывов на Исполнителя',
                'verbose_name_plural': 'Названия характеристик отзывов на Исполнителя',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('reviews.attributetitle',),
        ),
        migrations.CreateModel(
            name='ReviewTemplateCustomer',
            fields=[
            ],
            options={
                'verbose_name': 'Шаблон отзывов на Заказчика',
                'verbose_name_plural': 'Шаблоны отзывов на Заказчика',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('reviews.reviewtemplate',),
        ),
        migrations.CreateModel(
            name='ReviewTemplateExecuter',
            fields=[
            ],
            options={
                'verbose_name': 'Шаблон отзывов на Исполнителя',
                'verbose_name_plural': 'Шаблоны отзывов на Исполнителя',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('reviews.reviewtemplate',),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('owner', 'review', 'comment'), name='unique_together'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(condition=models.Q(('review', None)), fields=('owner', 'comment'), name='unique_without_review'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(condition=models.Q(('review', None)), fields=('owner', 'comment'), name='unique_without_comment'),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together={('title', 'review'), ('title', 'review_template')},
        ),
    ]
